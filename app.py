# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w40BE6OIRCYWduOBMN_tjMTAlWLyDOXy
"""

# 範例：把這段放在 app.py 開頭（把 MODEL_URL / PREPROC_URL 換成你的實際下載連結）
import os
import requests
import tempfile
import streamlit as st
import joblib
from tensorflow.keras.models import load_model

# ---- 設定（改成你的實際 URL） ----
# 建議把 URL 放到 st.secrets 或環境變數以避免把敏感連結放在公開 repo
MODEL_URL = 'https://github.com/faifaiwong/survival/blob/main/model.h5'
PREPROC_URL = 'https://github.com/faifaiwong/survival/blob/main/preprocessor.pkl'
# 若是 GitHub private release，會需要 GITHUB_TOKEN 存在 st.secrets["GITHUB_TOKEN"]

# ---- helper: 下載檔案到暫存檔 ----
def download_to_tmp(url, headers=None, suffix=""):
    resp = requests.get(url, headers=headers, stream=True, timeout=60)
    resp.raise_for_status()
    tmp = tempfile.NamedTemporaryFile(delete=False, suffix=suffix)
    with tmp as f:
        for chunk in resp.iter_content(chunk_size=8192):
            if chunk:
                f.write(chunk)
    return tmp.name

# ---- 下載並載入 model & preproc（會快取到 st.session_state，避免重複） ----
def load_remote_resources():
    if st.session_state.get("model") and st.session_state.get("preproc"):
        return st.session_state["model"], st.session_state["preproc"]

    headers = None
    # 若需私有 GitHub Releases，使用 token 做 Authorization
    token = st.secrets.get("GITHUB_TOKEN")
    if token:
        headers = {"Authorization": f"token {token}"}

    # 下載 model
    try:
        model_path = download_to_tmp(MODEL_URL, headers=headers, suffix=".h5")
        preproc_path = download_to_tmp(PREPROC_URL, headers=headers, suffix=".pkl")
    except Exception as e:
        st.error(f"下載模型失敗：{e}")
        return None, None

    # 載入（稍微包 try/except）
    try:
        model = load_model(model_path, custom_objects={'cox_ph_loss': cox_ph_loss})  # 若有 custom loss
    except Exception as e:
        st.error(f"載入 model.h5 失敗：{e}")
        model = None

    try:
        preproc = joblib.load(preproc_path)
    except Exception as e:
        st.error(f"載入 preprocessor.pkl 失敗：{e}")
        preproc = None

    # 嘗試刪掉暫存檔（若你想保留以便除錯可省略）
    for p in (model_path, preproc_path):
        try:
            os.remove(p)
        except Exception:
            pass

    st.session_state["model"] = model
    st.session_state["preproc"] = preproc
    return model, preproc

# 在你的 UI 中呼叫 load_remote_resources()，並檢查是否成功